{"version":3,"sources":["webpack:///src/app/user.ts","webpack:///src/environments/environment.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/user-list/user-list.component.ts","webpack:///src/app/user-list/user-list.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/user-details/user-details.component.ts","webpack:///src/app/user-details/user-details.component.html","webpack:///src/app/create-user/create-user.component.ts","webpack:///src/app/create-user/create-user.component.html","webpack:///src/app/update-user/update-user.component.ts","webpack:///src/app/update-user/update-user.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/user.service.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["User","environment","production","AppComponent","title","selector","templateUrl","styleUrls","UserListComponent","userService","router","reloadData","users","getUsersList","_id","deleteUser","subscribe","data","console","log","error","id","navigate","AppModule","declarations","imports","providers","bootstrap","UserDetailsComponent","route","user","snapshot","params","getUser","list","CreateUserComponent","submitted","createUser","gotoList","save","onSubmit","UpdateUserComponent","updateUser","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","exports","UserService","http","baseUrl","get","post","value","put","responseType","providedIn","bootstrapModule","err","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAAaA,I;;;;;;;;;;;;;;;;;;;ACAb;AAAA;;;AAAA;AAAA;AAAA,S,CAAA;AACA;AACA;;;AAEO,UAAMC,WAAW,GAAG;AACzBC,kBAAU,EAAE;AADa,OAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaC,Y,GALb;AAAA;;AAME,aAAAC,KAAA,GAAQ,sDAAR;AACD,O;;;yBAFYD,Y;AAAY,O;;;cAAZA,Y;AAAY,iC;AAAA,iB;AAAA,e;AAAA,2V;AAAA;AAAA;ACPzB;;AAEE;;AACE;;AACI;;AAAiE;;AAAS;;AAC9E;;AACA;;AACI;;AAA+D;;AAAQ;;AAC3E;;AACF;;AACF;;AACA;;AACE;;AACA;;AAAgC;;AAAS;;AACzC;;AACA;;AACE;;AACF;;AACE;;AACF;;AACF;;AAEA;;AACE;;AACI;;AAAM;;AAA2C;;AACrD;;AACF;;;;AAbkC;;AAAA;;;;;;;;;wEDNrBA,Y,EAAY;gBALxB,uDAKwB;iBALd;AACTE,oBAAQ,EAAE,UADD;AAETC,uBAAW,EAAE,sBAFJ;AAGTC,qBAAS,EAAE,CAAC,qBAAD;AAHF,W;AAKc,U;;;;;;;;;;;;;;;;;;AEHzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACWU;;AACE;;AAAI;;AAAkB;;AACtB;;AAAI;;AAAiB;;AACrB;;AAAI;;AAAgB;;AACpB;;AACE;;AAAQ;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAgF;;AAAM;;AAC9F;;AAAQ;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA+E;;AAAM;;AAC3F;;AAAQ;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA8E;;AAAO;;AACjG;;AACF;;;;;;AARM;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;UDNHC,iB;AAGX,mCAAoBC,WAApB,EACUC,MADV,EAC0B;AAAA;;AADN,eAAAD,WAAA,GAAAA,WAAA;AACV,eAAAC,MAAA,GAAAA,MAAA;AAAkB;;;;qCAEjB;AACT,iBAAKC,UAAL;AACD;;;uCAEY;AACX,iBAAKC,KAAL,GAAa,KAAKH,WAAL,CAAiBI,YAAjB,EAAb;AACD;;;qCAEUC,G,EAAa;AAAA;;AAEtB,iBAAKL,WAAL,CAAiBM,UAAjB,CAA4BD,GAA5B,EACGE,SADH,CAEI,UAAAC,IAAI,EAAI;AACNC,qBAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,mBAAI,CAACN,UAAL;AACD,aALL,EAMI,UAAAS,KAAK;AAAA,qBAAIF,OAAO,CAACC,GAAR,CAAYC,KAAZ,CAAJ;AAAA,aANT;AAOD;;;qCACUC,E,EAAU;AACnB,iBAAKX,MAAL,CAAYY,QAAZ,CAAqB,CAAC,QAAD,EAAWD,EAAX,CAArB;AACD;;;sCACWP,G,EAAW;AACrB,iBAAKJ,MAAL,CAAYY,QAAZ,CAAqB,CAAC,SAAD,EAAYR,GAAZ,CAArB;AACD;;;;;;;yBA7BUN,iB,EAAiB,0H,EAAA,uH;AAAA,O;;;cAAjBA,iB;AAAiB,sC;AAAA,iB;AAAA,e;AAAA,+U;AAAA;AAAA;ACZ9B;;AACI;;AACE;;AAAI;;AAAS;;AACf;;AACA;;AACE;;AACE;;AACE;;AACE;;AAAI;;AAAS;;AACb;;AAAI;;AAAQ;;AACZ;;AAAI;;AAAK;;AACT;;AAAI;;AAAO;;AACb;;AACF;;AACA;;AACE;;;;AAUF;;AACF;;AACF;;AACF;;;;AAbY;;AAAA;;;;;;;;;;wEDHDA,iB,EAAiB;gBAL7B,uDAK6B;iBALnB;AACTH,oBAAQ,EAAE,eADD;AAETC,uBAAW,EAAE,4BAFJ;AAGTC,qBAAS,EAAE,CAAC,2BAAD;AAHF,W;AAKmB,U;;;;;;;;;;;;;;;;;;;;;;;;AEZ9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UA2BagB,S;;;;;cAAAA,S;AAAS,oBAFR,2DAEQ;;;;2BAATA,S;AAAS,S;AAAA,mBAHT,E;AAAE,kBANJ,CACP,uEADO,EAEP,oEAFO,EAGP,0DAHO,EAIP,qEAJO,CAMI;;;;4HAGFA,S,EAAS;AAAA,yBAflB,2DAekB,EAdlB,sFAckB,EAblB,yFAakB,EAZlB,gFAYkB,EAXlB,sFAWkB;AAXC,oBAGnB,uEAHmB,EAInB,oEAJmB,EAKnB,0DALmB,EAMnB,qEANmB;AAWD,S;AALF,O;;;;;wEAKPA,S,EAAS;gBAjBrB,sDAiBqB;iBAjBZ;AACRC,wBAAY,EAAE,CACZ,2DADY,EAEZ,sFAFY,EAGZ,yFAHY,EAIZ,gFAJY,EAKZ,sFALY,CADN;AAQRC,mBAAO,EAAE,CACP,uEADO,EAEP,oEAFO,EAGP,0DAHO,EAIP,qEAJO,CARD;AAcRC,qBAAS,EAAE,EAdH;AAeRC,qBAAS,EAAE,CAAC,2DAAD;AAfH,W;AAiBY,U;;;;;;;;;;;;;;;;;;AC3BtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACGA;;AACE;;AACE;;AAAO;;AAAG;;AAAY;;AAAI;;AAAS;;AACrC;;AACA;;AACE;;AAAO;;AAAG;;AAAW;;AAAI;;AAAS;;AACpC;;AACA;;AACE;;AAAO;;AAAG;;AAAU;;AAAI;;AAAS;;AACnC;;AACF;;;;;;AARuC;;AAAA;;AAGD;;AAAA;;AAGD;;AAAA;;;;UDDxBC,oB;AAKX,sCAAoBC,KAApB,EAAkDnB,MAAlD,EACUD,WADV,EACoC;AAAA;;AADhB,eAAAoB,KAAA,GAAAA,KAAA;AAA8B,eAAAnB,MAAA,GAAAA,MAAA;AACxC,eAAAD,WAAA,GAAAA,WAAA;AAA6B;;;;qCAE5B;AAAA;;AACT,iBAAKqB,IAAL,GAAY,IAAI,0CAAJ,EAAZ;AAEA,iBAAKhB,GAAL,GAAW,KAAKe,KAAL,CAAWE,QAAX,CAAoBC,MAApB,CAA2B,KAA3B,CAAX;AACAd,mBAAO,CAACC,GAAR,CAAY,OAAK,KAAKL,GAAtB;AACA,iBAAKL,WAAL,CAAiBwB,OAAjB,CAAyB,KAAKnB,GAA9B,EACGE,SADH,CACa,UAAAC,IAAI,EAAI;AACjBC,qBAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,oBAAI,CAACa,IAAL,GAAYb,IAAZ;AACD,aAJH,EAIK,UAAAG,KAAK;AAAA,qBAAIF,OAAO,CAACC,GAAR,CAAYC,KAAZ,CAAJ;AAAA,aAJV;AAKD;;;iCAEG;AACF,iBAAKV,MAAL,CAAYY,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACD;;;;;;;yBAtBUM,oB,EAAoB,+H,EAAA,uH,EAAA,0H;AAAA,O;;;cAApBA,oB;AAAoB,yC;AAAA,gB;AAAA,e;AAAA,oE;AAAA;AAAA;ACVjC;;AAAI;;AAAY;;AAEhB;;AACA;;AAYA;;AACA;;AACA;;AAAQ;AAAA,qBAAS,IAAAM,IAAA,EAAT;AAAe,aAAf;;AAAyC;;AAAS;;AAAS;;;;AAd9D;;AAAA;;;;;;;;;wEDOQN,oB,EAAoB;gBALhC,uDAKgC;iBALtB;AACTvB,oBAAQ,EAAE,kBADD;AAETC,uBAAW,EAAE,+BAFJ;AAGTC,qBAAS,EAAE,CAAC,8BAAD;AAHF,W;AAKsB,U;;;;;;;;;;;;;;;;;;;;;;;;;;AETjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UASa4B,mB;AAKX,qCAAoB1B,WAApB,EACUC,MADV,EAC0B;AAAA;;AADN,eAAAD,WAAA,GAAAA,WAAA;AACV,eAAAC,MAAA,GAAAA,MAAA;AAJV,eAAAoB,IAAA,GAAa,IAAI,0CAAJ,EAAb;AACA,eAAAM,SAAA,GAAY,KAAZ;AAG6B;;;;qCAElB,CACV;;;oCAEM;AACL,iBAAKA,SAAL,GAAiB,KAAjB;AACA,iBAAKN,IAAL,GAAY,IAAI,0CAAJ,EAAZ;AACD;;;iCAEM;AAAA;;AACL,iBAAKrB,WAAL,CACC4B,UADD,CACY,KAAKP,IADjB,EACuBd,SADvB,CACiC,UAAAC,IAAI,EAAI;AACvCC,qBAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,oBAAI,CAACa,IAAL,GAAY,IAAI,0CAAJ,EAAZ;;AACA,oBAAI,CAACQ,QAAL;AACD,aALD,EAMA,UAAAlB,KAAK;AAAA,qBAAIF,OAAO,CAACC,GAAR,CAAYC,KAAZ,CAAJ;AAAA,aANL;AAOD;;;qCAEU;AACT,iBAAKgB,SAAL,GAAiB,IAAjB;AACA,iBAAKG,IAAL;AACD;;;qCAEU;AACT,iBAAK7B,MAAL,CAAYY,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACD;;;;;;;yBAjCUa,mB,EAAmB,0H,EAAA,uH;AAAA,O;;;cAAnBA,mB;AAAmB,wC;AAAA,iB;AAAA,e;AAAA,khB;AAAA;AAAA;ACVhC;;AAAI;;AAAW;;AACf;;AACE;;AAAM;AAAA,qBAAY,IAAAK,QAAA,EAAZ;AAAsB,aAAtB;;AACJ;;AACE;;AAAkB;;AAAU;;AAC5B;;AAAgE;AAAA;AAAA;;AAAhE;;AACF;;AAEA;;AACE;;AAAkB;;AAAS;;AAC3B;;AAA+D;AAAA;AAAA;;AAA/D;;AACF;;AAEA;;AACE;;AAAkB;;AAAQ;;AAC1B;;AAA8D;AAAA;AAAA;;AAA9D;;AACF;;AAEA;;AAA6C;;AAAM;;AACrD;;AACF;;AAEA;;AACE;;AAAI;;AAAuB;;AAC7B;;;;AAvBK;;AAAA;;AAIiE;;AAAA;;AAKD;;AAAA;;AAKD;;AAAA;;AAO/D;;AAAA;;;;;;;;;wEDZQL,mB,EAAmB;gBAL/B,uDAK+B;iBALrB;AACT9B,oBAAQ,EAAE,iBADD;AAETC,uBAAW,EAAE,8BAFJ;AAGTC,qBAAS,EAAE,CAAC,6BAAD;AAHF,W;AAKqB,U;;;;;;;;;;;;;;;;;;;;;;;;AEVhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAUakC,mB;AAKX,qCAAoBZ,KAApB,EAAkDnB,MAAlD,EACUD,WADV,EACoC;AAAA;;AADhB,eAAAoB,KAAA,GAAAA,KAAA;AAA8B,eAAAnB,MAAA,GAAAA,MAAA;AACxC,eAAAD,WAAA,GAAAA,WAAA;AAA6B;;;;qCAE5B;AAAA;;AACT,iBAAKqB,IAAL,GAAY,IAAI,0CAAJ,EAAZ;AAEA,iBAAKhB,GAAL,GAAW,KAAKe,KAAL,CAAWE,QAAX,CAAoBC,MAApB,CAA2B,KAA3B,CAAX;AAEA,iBAAKvB,WAAL,CAAiBwB,OAAjB,CAAyB,KAAKnB,GAA9B,EACGE,SADH,CACa,UAAAC,IAAI,EAAI;AACjB,oBAAI,CAACa,IAAL,GAAYb,IAAZ;AACD,aAHH,EAGK,UAAAG,KAAK;AAAA,qBAAIF,OAAO,CAACC,GAAR,CAAYC,KAAZ,CAAJ;AAAA,aAHV;AAID;;;uCAEY;AAAA;;AACX,iBAAKX,WAAL,CAAiBiC,UAAjB,CAA4B,KAAK5B,GAAjC,EAAsC,KAAKgB,IAA3C,EACGd,SADH,CACa,UAAAC,IAAI,EAAI;AACjBC,qBAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,oBAAI,CAACa,IAAL,GAAY,IAAI,0CAAJ,EAAZ;;AACA,oBAAI,CAACQ,QAAL;AACD,aALH,EAKK,UAAAlB,KAAK;AAAA,qBAAIF,OAAO,CAACC,GAAR,CAAYC,KAAZ,CAAJ;AAAA,aALV;AAMD;;;qCAEU;AACT,iBAAKsB,UAAL;AACD;;;qCAEU;AACT,iBAAKhC,MAAL,CAAYY,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACD;;;;;;;yBAlCUmB,mB,EAAmB,+H,EAAA,uH,EAAA,0H;AAAA,O;;;cAAnBA,mB;AAAmB,wC;AAAA,iB;AAAA,e;AAAA,uf;AAAA;AAAA;ACVhC;;AAAI;;AAAW;;AACf;;AACE;;AAAM;AAAA,qBAAY,IAAAD,QAAA,EAAZ;AAAsB,aAAtB;;AACJ;;AACE;;AAAkB;;AAAU;;AAC5B;;AAAgE;AAAA;AAAA;;AAAhE;;AACF;;AAEA;;AACE;;AAAkB;;AAAS;;AAC3B;;AAA+D;AAAA;AAAA;;AAA/D;;AACF;;AAEA;;AACE;;AAAkB;;AAAQ;;AAC1B;;AAA8D;AAAA;AAAA;;AAA9D;;AACF;;AAEA;;AAA8C;;AAAM;;AACtD;;AACF;;;;AAfsE;;AAAA;;AAKD;;AAAA;;AAKD;;AAAA;;;;;;;;;wEDLvDC,mB,EAAmB;gBAL/B,uDAK+B;iBALrB;AACTpC,oBAAQ,EAAE,iBADD;AAETC,uBAAW,EAAE,8BAFJ;AAGTC,qBAAS,EAAE,CAAC,6BAAD;AAHF,W;AAKqB,U;;;;;;;;;;;;;;;;;;;;;;;;;;AEVhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAOA,UAAMoC,MAAM,GAAW,CACrB;AAAEC,YAAI,EAAE,EAAR;AAAYC,kBAAU,EAAE,MAAxB;AAAgCC,iBAAS,EAAE;AAA3C,OADqB,EAErB;AAAEF,YAAI,EAAE,OAAR;AAAiBG,iBAAS,EAAE;AAA5B,OAFqB,EAGrB;AAAEH,YAAI,EAAE,KAAR;AAAeG,iBAAS,EAAE;AAA1B,OAHqB,EAIrB;AAAEH,YAAI,EAAE,aAAR;AAAuBG,iBAAS,EAAE;AAAlC,OAJqB,EAKrB;AAAEH,YAAI,EAAE,cAAR;AAAwBG,iBAAS,EAAE;AAAnC,OALqB,CAAvB;;UAYaC,gB;;;;;cAAAA;;;;2BAAAA,gB;AAAgB,S;AAAA,kBAHlB,CAAC,6DAAaC,OAAb,CAAqBN,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;4HAAhBK,gB,EAAgB;AAAA;AAAA,oBAFjB,4DAEiB;AAAA,S;AAFL,O;;;;;wEAEXA,gB,EAAgB;gBAJ5B,sDAI4B;iBAJnB;AACRvB,mBAAO,EAAE,CAAC,6DAAawB,OAAb,CAAqBN,MAArB,CAAD,CADD;AAERO,mBAAO,EAAE,CAAC,4DAAD;AAFD,W;AAImB,U;;;;;;;;;;;;;;;;;;ACnB7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaC,W;AAIX,6BAAoBC,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAFZ,eAAAC,OAAA,GAAU,uDAAV;AAEiC;;;;kCAEjCvC,G,EAAW;AACjB,mBAAO,KAAKsC,IAAL,CAAUE,GAAV,WAAiB,KAAKD,OAAtB,cAAiCvC,GAAjC,EAAP;AACD;;;qCAEUgB,I,EAAY;AACrB,mBAAO,KAAKsB,IAAL,CAAUG,IAAV,WAAkB,KAAKF,OAAvB,GAAkCvB,IAAlC,CAAP;AACD;;;qCAEUhB,G,EAAa0C,K,EAAU;AAChC,mBAAO,KAAKJ,IAAL,CAAUK,GAAV,WAAiB,KAAKJ,OAAtB,cAAiCvC,GAAjC,GAAwC0C,KAAxC,CAAP;AACD;;;qCAEU1C,G,EAAW;AACpB,mBAAO,KAAKsC,IAAL,qBAAoB,KAAKC,OAAzB,cAAoCvC,GAApC,GAA2C;AAAE4C,0BAAY,EAAE;AAAhB,aAA3C,CAAP;AACD;;;yCAEW;AACV,mBAAO,KAAKN,IAAL,CAAUE,GAAV,WAAiB,KAAKD,OAAtB,EAAP;AACD;;;;;;;yBAxBUF,W,EAAW,uH;AAAA,O;;;eAAXA,W;AAAW,iBAAXA,WAAW,K;AAAA,oBAFV;;;;;wEAEDA,W,EAAW;gBAHvB,wDAGuB;iBAHZ;AACVQ,sBAAU,EAAE;AADF,W;AAGY,U;;;;;;;;;;;;;;;;;;;;;;ACPxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,UAAI,sEAAYzD,UAAhB,EAA4B;AAC1B;AACD;;AAED,kFAAyB0D,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,eAAI3C,OAAO,CAACE,KAAR,CAAcyC,GAAd,CAAJ;AAAA,OADZ;;;;;;;;;;;;;;;ACVA,eAASC,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,eAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,cAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,WAAC,CAACE,IAAF,GAAS,kBAAT;AACA,gBAAMF,CAAN;AACA,SAJM,CAAP;AAKA;;AACDL,8BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,eAAO,EAAP;AAAY,OAAzD;;AACAR,8BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,YAAM,CAACrB,OAAP,GAAiBY,wBAAjB;AACAA,8BAAwB,CAACzC,EAAzB,GAA8B,MAA9B","file":"main-es5.js","sourcesContent":["export class User {\n    _id: string;\n    firstName: string;\n    lastName: string;\n    emailId: string;\n    active: boolean;\n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Angular 10 + Kotlin + Spring Boot 2 + Mongo DB CRUD ';\n}\n","<nav class=\"navbar navbar-expand-sm bg-success navbar-dark\">\n  <!-- Links -->\n  <ul class=\"navbar-nav\">\n    <li class=\"nav-item\">\n        <a routerLink=\"users\" class=\"nav-link\" routerLinkActive=\"active\">User List</a>\n    </li>\n    <li class=\"nav-item\">\n        <a routerLink=\"add\" class=\"nav-link\" routerLinkActive=\"active\">Add User</a>\n    </li>\n  </ul>\n</nav>\n<div class=\"container\">\n  <br>\n  <h2 style=\"text-align: center;\">{{title}}</h2>\n  <hr>  \n  <div class=\"card\">\n    <div class=\"card-body\">\n  <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n\n<footer class=\"footer\">\n  <div class=\"container\">\n      <span>All Rights Reserved 2020 @Knowledge Factory</span>\n  </div>\n</footer>","import { UserDetailsComponent } from '../user-details/user-details.component';\nimport { Observable } from \"rxjs\";\nimport { UserService } from \"../user.service\";\nimport { User } from \"../user\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: \"app-user-list\",\n  templateUrl: \"./user-list.component.html\",\n  styleUrls: [\"./user-list.component.css\"]\n})\nexport class UserListComponent implements OnInit {\n  users: Observable<User[]>;\n\n  constructor(private userService: UserService,\n    private router: Router) {}\n\n  ngOnInit() {\n    this.reloadData();\n  }\n\n  reloadData() {\n    this.users = this.userService.getUsersList();\n  }\n\n  deleteUser(_id: string) {\n  \n    this.userService.deleteUser(_id)\n      .subscribe(\n        data => {\n          console.log(data);\n          this.reloadData();\n        },\n        error => console.log(error));\n  }\n  updateUser(id: string){\n    this.router.navigate(['update', id]);\n  }\n  userDetails(_id: string){\n    this.router.navigate(['details', _id]);\n  }\n}","<div class=\"panel panel-primary\">\n    <div class=\"panel-heading\">\n      <h2>User List</h2>\n    </div>\n    <div class=\"panel-body\">\n      <table class=\"table table-striped\">\n        <thead>\n          <tr>\n            <th>Firstname</th>\n            <th>Lastname</th>\n            <th>Email</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let user of users | async\">\n            <td>{{user.firstName}}</td>\n            <td>{{user.lastName}}</td>\n            <td>{{user.emailId}}</td>\n            <td>\n              <button (click)=\"updateUser(user.id)\" class=\"btn btn-warning\" style=\"margin-left: 10px\">Update</button>\n              <button (click)=\"deleteUser(user.id)\" class=\"btn btn-danger\" style=\"margin-left: 10px\">Delete</button>\n                <button (click)=\"userDetails(user.id)\" class=\"btn btn-info\" style=\"margin-left: 10px\">Details</button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CreateUserComponent } from './create-user/create-user.component';\nimport { UserDetailsComponent } from './user-details/user-details.component';\nimport { UserListComponent } from './user-list/user-list.component';\nimport { UpdateUserComponent } from './update-user/update-user.component';\nimport { HttpClientModule } from '@angular/common/http';\n@NgModule({\n  declarations: [\n    AppComponent,\n    CreateUserComponent,\n    UserDetailsComponent,\n    UserListComponent,\n    UpdateUserComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { User } from '../user';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { UserService } from '../user.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-user-details',\n  templateUrl: './user-details.component.html',\n  styleUrls: ['./user-details.component.css']\n})\nexport class UserDetailsComponent implements OnInit {\n\n  _id: string;\n  user: User;\n\n  constructor(private route: ActivatedRoute,private router: Router,\n    private userService: UserService) { }\n\n  ngOnInit() {\n    this.user = new User();\n\n    this._id = this.route.snapshot.params['_id'];\n    console.log(\"gh\"+this._id);\n    this.userService.getUser(this._id)\n      .subscribe(data => {\n        console.log(data)\n        this.user = data;\n      }, error => console.log(error));\n  }\n\n  list(){\n    this.router.navigate(['users']);\n  }\n}","<h2>User Details</h2> \n\n<hr/>\n<div *ngIf=\"user\">\n  <div>\n    <label><b>First Name: </b></label> {{user.firstName}}\n  </div>\n  <div>\n    <label><b>Last Name: </b></label> {{user.lastName}}\n  </div>\n  <div>\n    <label><b>Email Id: </b></label> {{user.emailId}}\n  </div>  \n</div>\n\n<br>\n<br>\n<button (click)=\"list()\" class=\"btn btn-primary\">User List</button><br>","import { UserService } from '../user.service';\nimport { User } from '../user';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-create-user',\n  templateUrl: './create-user.component.html',\n  styleUrls: ['./create-user.component.css']\n})\nexport class CreateUserComponent implements OnInit {\n\n  user: User = new User();\n  submitted = false;\n\n  constructor(private userService: UserService,\n    private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  newUser(): void {\n    this.submitted = false;\n    this.user = new User();\n  }\n\n  save() {\n    this.userService\n    .createUser(this.user).subscribe(data => {\n      console.log(data)\n      this.user = new User();\n      this.gotoList();\n    }, \n    error => console.log(error));\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    this.save();    \n  }\n\n  gotoList() {\n    this.router.navigate(['/users']);\n  }\n}","<h3>Create User</h3>\n<div [hidden]=\"submitted\" style=\"width: 400px;\">\n  <form (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label for=\"name\">First Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"firstName\" required [(ngModel)]=\"user.firstName\" name=\"firstName\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"name\">Last Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"lastName\" required [(ngModel)]=\"user.lastName\" name=\"lastName\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"name\">Email Id</label>\n      <input type=\"text\" class=\"form-control\" id=\"emailId\" required [(ngModel)]=\"user.emailId\" name=\"emailId\">\n    </div>\n\n    <button type=\"submit\" class=\"btn btn-danger\">Submit</button>\n  </form>\n</div>\n\n<div [hidden]=\"!submitted\">\n  <h4>Successfully submitted!</h4>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { User } from '../user';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-update-user',\n  templateUrl: './update-user.component.html',\n  styleUrls: ['./update-user.component.css']\n})\nexport class UpdateUserComponent implements OnInit {\n\n  _id: string;\n  user: User;\n\n  constructor(private route: ActivatedRoute,private router: Router,\n    private userService: UserService) { }\n\n  ngOnInit() {\n    this.user = new User();\n\n    this._id = this.route.snapshot.params['_id'];\n    \n    this.userService.getUser(this._id)\n      .subscribe(data => {\n        this.user = data;\n      }, error => console.log(error));\n  }\n\n  updateUser() {\n    this.userService.updateUser(this._id, this.user)\n      .subscribe(data => {\n        console.log(data);\n        this.user = new User();\n        this.gotoList();\n      }, error => console.log(error));\n  }\n\n  onSubmit() {\n    this.updateUser();    \n  }\n\n  gotoList() {\n    this.router.navigate(['/users']);\n  }\n}","<h3>Update User</h3>\n<div  style=\"width: 500px;\">\n  <form (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label for=\"name\">First Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"firstName\" required [(ngModel)]=\"user.firstName\" name=\"firstName\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"name\">Last Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"lastName\" required [(ngModel)]=\"user.lastName\" name=\"lastName\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"name\">Email Id</label>\n      <input type=\"text\" class=\"form-control\" id=\"emailId\" required [(ngModel)]=\"user.emailId\" name=\"emailId\">\n    </div>\n\n    <button type=\"submit\" class=\"btn btn-success\">Submit</button>\n  </form>\n</div>","import { UserDetailsComponent } from './user-details/user-details.component';\nimport { CreateUserComponent } from './create-user/create-user.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {UserListComponent } from './user-list/user-list.component';\nimport { UpdateUserComponent } from './update-user/update-user.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'user', pathMatch: 'full' },\n  { path: 'users', component: UserListComponent },\n  { path: 'add', component: CreateUserComponent },\n  { path: 'update/:_id', component: UpdateUserComponent },\n  { path: 'details/:_id', component: UserDetailsComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private baseUrl = 'https://kotlin-production.up.railway.app/api/v1/users';\n\n  constructor(private http: HttpClient) { }\n\n  getUser(_id: string): Observable<any> {\n    return this.http.get(`${this.baseUrl}/${_id}`);\n  }\n\n  createUser(user: Object): Observable<Object> {\n    return this.http.post(`${this.baseUrl}`, user);\n  }\n\n  updateUser(_id: string, value: any): Observable<Object> {\n    return this.http.put(`${this.baseUrl}/${_id}`, value);\n  }\n\n  deleteUser(_id: string): Observable<any> {\n    return this.http.delete(`${this.baseUrl}/${_id}`, { responseType: 'text' });\n  }\n\n  getUsersList(): Observable<any> {\n    return this.http.get(`${this.baseUrl}`);\n  }\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}